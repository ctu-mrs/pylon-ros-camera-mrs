<?xml version="1.0"?>
<launch>

  <!-- ENV VARS -->
  <arg name="UAV_NAME" default="$(env UAV_NAME)" />
  <arg name="BASLER_LEFT_ID" default="$(optenv BASLER_LEFT)" />
  <arg name="BASLER_RIGHT_ID" default="$(optenv BASLER_RIGHT)" />

  <arg name="debug" default="false" />

  <!-- nodelet-related arguments -->
  <arg name="standalone" default="true" />
  <arg name="manager" default="basler_nodelet_manager" />

  <group ns="$(arg UAV_NAME)">

      <arg name="respawn" default="true" />
      <arg name="mtu_size" default="1500" />
      <arg name="startup_user_set" default="CurrentSetting" />
      <arg name="enable_status_publisher" default="true" />
      <arg name="enable_current_params_publisher" default="true" />

      <arg name="camera_name_left" default="basler_left" />
      <arg name="camera_name_right" default="basler_right" />

      <arg name="config_file" default="$(find pylon_camera)/config/uav.yaml" />
      <arg name="config_file_grayscale" default="$(find pylon_camera)/config/grayscale.yaml" />

      <arg name="camera_info_url_left" default="file://$(find mrs_uav_general)/config/camera_calibrations/basler/basler_$(arg BASLER_LEFT_ID).yaml" />
      <arg name="camera_info_url_right" default="file://$(find mrs_uav_general)/config/camera_calibrations/basler/basler_$(arg BASLER_RIGHT_ID).yaml" />

      <arg unless="$(arg debug)" name="launch_prefix" value="" />
      <arg     if="$(arg debug)" name="launch_prefix" value="debug_roslaunch" />


      <arg name="nodelet_left" value="pylon_camera/PylonCameraNodelet" />
      <arg name="nodelet_load_left" value="load $(arg nodelet_left) $(arg manager)"/>

      <arg name="nodelet_right" value="pylon_camera/PylonCameraNodelet" />
      <arg name="nodelet_load_right" value="load $(arg nodelet_right) $(arg manager)"/>

      <node if="$(arg standalone)" pkg="nodelet" type="nodelet" name="$(arg manager)" args="manager" output="screen" launch-prefix="$(arg launch_prefix)" respawn="$(arg respawn)" />

      <node pkg="nodelet" type="nodelet" name="$(arg camera_name_left)" args="$(arg nodelet_load_left)" output="screen" respawn="$(arg respawn)" >
        <rosparam command="load" file="$(arg config_file)" />
        <param name="camera_frame" value="$(arg UAV_NAME)/$(arg camera_name_left)_optical"/>
        <param name="device_user_id" value="$(arg camera_name_left)"/>
        <param name="camera_info_url" value="$(arg camera_info_url_left)"/>
        <param name="gige/mtu_size" value="$(arg mtu_size)"/>
        <param name="startup_user_set" value="$(arg startup_user_set)"/>
        <param name="enable_status_publisher" value="$(arg enable_status_publisher)"/>
        <param name="enable_current_params_publisher" value="$(arg enable_current_params_publisher)"/>
      </node>

      <node pkg="nodelet" type="nodelet" name="$(arg camera_name_right)" args="$(arg nodelet_load_right)" output="screen" respawn="$(arg respawn)" >
        <rosparam command="load" file="$(arg config_file)" />
        <param name="camera_frame" value="$(arg UAV_NAME)/$(arg camera_name_right)_optical"/>
        <param name="device_user_id" value="$(arg camera_name_right)"/>
        <param name="camera_info_url" value="$(arg camera_info_url_right)"/>
        <param name="gige/mtu_size" value="$(arg mtu_size)"/>
        <param name="startup_user_set" value="$(arg startup_user_set)"/>
        <param name="enable_status_publisher" value="$(arg enable_status_publisher)"/>
        <param name="enable_current_params_publisher" value="$(arg enable_current_params_publisher)"/>
      </node>
      
</group>

</launch>

